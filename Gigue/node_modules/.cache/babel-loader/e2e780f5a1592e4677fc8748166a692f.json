{"ast":null,"code":"var _jsxFileName = \"/home/alicja/Documents/FrontEndProject/gigue/Gigue/src/routes/Events.js\";\n\n/* page for loading events on bootstrap cards */\nimport { Redirect, NavLink, Link } from \"react-router-dom\";\nimport React from \"react\";\nimport \"../styles/App.css\";\nimport EventCard from \"./EventCard\";\nimport ReactLoading from \"react-loading\";\nimport Landing from \"./Landing\";\nimport \"../styles/searchpage.css\";\n\nclass Events extends React.Component {\n  componentWillMount() {\n    const googleUrl = 'https://maps.googleapis.com/maps/api/geocode/json?components=postal_code:' + this.props.zip + '&key=AIzaSyBNWms-eVzSQmo6leT8Re4yBrpmC9tx-h0';\n    fetch(googleUrl).then(result => result.json()).then(result => {\n      if (result.results.length == 0) {\n        throw \"Invalid Zip\";\n      }\n\n      console.log(result);\n      return result.results;\n    }).then(result => {\n      return result[0].geometry.location;\n    }).then(result => {\n      const lat = result.lat.toFixed(2);\n      const long = result.lng.toFixed(2);\n      const songkickAreaUrl = 'https://api.songkick.com/api/3.0/search/locations.json?location=geo:' + lat + ',' + long + '&apikey=nD4GefUecMO1Dzwh';\n      console.log(songkickAreaUrl);\n      return songkickAreaUrl;\n    }).then(url => {\n      fetch(url).then(result => result.json()).then(result => result.resultsPage.results).then(result => {\n        const metroAreaId = result.location[0].metroArea.id;\n        const songkickEventsUrl = 'https://api.songkick.com/api/3.0/metro_areas/' + metroAreaId + '/calendar.json?apikey=nD4GefUecMO1Dzwh';\n        console.log(songkickEventsUrl);\n        return songkickEventsUrl;\n      }).then(url => {\n        fetch(url).then(response => response.json()).then(data => {\n          console.log(data);\n          console.log(data.resultsPage.results.event);\n          return data.resultsPage.results.event;\n        }).then(data => {\n          const eventsQueried = data.map(x => {\n            let obj = {};\n            obj['EventName'] = x.displayName;\n            obj[\"Uri\"] = x.uri;\n            obj[\"Venue\"] = x.venue.displayName;\n            obj[\"StartDate\"] = x.start.date;\n            obj[\"Location\"] = x.location.city;\n            obj[\"Headliners\"] = x.performance.filter(artist => {\n              if (artist.billing == \"headline\") return artist;\n            }).map(y => y.displayName);\n            obj[\"SupportArtists\"] = x.performance.filter(artist => {\n              if (artist.billing != \"headline\") {\n                return artist;\n              }\n            }).map(y => y.displayName);\n            return obj;\n          });\n          console.log(eventsQueried);\n          return eventsQueried;\n        }).then(results => {\n          this.setState({\n            events: results,\n            done: true\n          });\n        });\n      });\n    }).catch(error => {\n      console.log(error);\n      this.setState({\n        error: true,\n        errorMsg: error\n      });\n    });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      events: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      done: undefined,\n      error: false,\n      errorMsg: undefined\n    };\n  }\n\n  handleChange(e) {\n    this.props.onZipChange(e.target.value);\n  } // below I added a link back to the landing page, just to make our lives easier while testing\n  // we'll remove it when we actually build the events page, since users won't need to go back to\n  // the landing page\n\n\n  render() {\n    const thisZip = this.props.zip;\n    const {\n      events\n    } = this.state; //TODO: This section is not working. It just creates an empty page. I don't know why\n\n    if (thisZip == '') {\n      alert(\"No Zip is inputted - redirecting to main page\");\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      });\n    } //<EventCard eventsData={events} />\n    //<div className=\"eventsPage\">Zip entered was: {thisZip}</div>\n\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, !this.state.error ? !this.state.done ? React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(ReactLoading, {\n      type: \"bars\",\n      color: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })) : React.createElement(EventCard, {\n      eventsData: events,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      className: \"error-msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, this.state.errorMsg), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Home\")))));\n  }\n\n}\n\nexport default Events;","map":{"version":3,"sources":["/home/alicja/Documents/FrontEndProject/gigue/Gigue/src/routes/Events.js"],"names":["Redirect","NavLink","Link","React","EventCard","ReactLoading","Landing","Events","Component","componentWillMount","googleUrl","props","zip","fetch","then","result","json","results","length","console","log","geometry","location","lat","toFixed","long","lng","songkickAreaUrl","url","resultsPage","metroAreaId","metroArea","id","songkickEventsUrl","response","data","event","eventsQueried","map","x","obj","displayName","uri","venue","start","date","city","performance","filter","artist","billing","y","setState","events","done","catch","error","errorMsg","constructor","state","handleChange","bind","undefined","e","onZipChange","target","value","render","thisZip","alert"],"mappings":"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","sourcesContent":["/* page for loading events on bootstrap cards */\nimport { Redirect, NavLink, Link } from \"react-router-dom\";\nimport React from \"react\";\nimport \"../styles/App.css\";\nimport EventCard from \"./EventCard\";\nimport ReactLoading from \"react-loading\";\nimport Landing from \"./Landing\";\nimport \"../styles/searchpage.css\";\nclass Events extends React.Component {\n  state = {\n    events: []\n  };\n\n  componentWillMount() {\n    const googleUrl = 'https://maps.googleapis.com/maps/api/geocode/json?components=postal_code:' + this.props.zip + '&key=AIzaSyBNWms-eVzSQmo6leT8Re4yBrpmC9tx-h0'\n    fetch(googleUrl)\n      .then(result => result.json())\n      .then(result => {\n        if(result.results.length == 0){\n          throw \"Invalid Zip\";\n        }\n        console.log(result);\n        return result.results;\n      })\n      .then(result => {\n        return result[0].geometry.location;\n      })\n      .then(result => {\n        const lat = result.lat.toFixed(2);\n        const long = result.lng.toFixed(2);\n        const songkickAreaUrl = 'https://api.songkick.com/api/3.0/search/locations.json?location=geo:' + lat + ',' + long + '&apikey=nD4GefUecMO1Dzwh'\n        console.log(songkickAreaUrl);\n        return songkickAreaUrl;\n      })\n      .then(url => {\n        fetch(url)\n          .then(result => result.json())\n          .then(result => result.resultsPage.results)\n          .then(result => {\n            const metroAreaId = result.location[0].metroArea.id;\n            const songkickEventsUrl = 'https://api.songkick.com/api/3.0/metro_areas/' + metroAreaId + '/calendar.json?apikey=nD4GefUecMO1Dzwh';\n            console.log(songkickEventsUrl);\n            return songkickEventsUrl;\n          })\n          .then(url => {\n            fetch(url)\n            .then(response => response.json())\n            .then(data => {\n              console.log(data);\n              console.log(data.resultsPage.results.event);\n              return data.resultsPage.results.event;\n            })\n            .then(data => {\n              const eventsQueried = data.map(x => {\n                let obj = {};\n                obj['EventName'] = x.displayName;\n                obj[\"Uri\"] = x.uri;\n                obj[\"Venue\"] = x.venue.displayName;\n                obj[\"StartDate\"] = x.start.date;\n                obj[\"Location\"] = x.location.city;\n                obj[\"Headliners\"] = x.performance.filter(artist => {\n                  if(artist.billing == \"headline\")\n                    return artist;\n                }).map(y => y.displayName);\n                obj[\"SupportArtists\"] = x.performance.filter(artist => {\n                  if(artist.billing != \"headline\"){\n                    return artist;\n                  }\n                }).map(y => y.displayName)\n                \n                return obj;\n              \n              });\n              console.log(eventsQueried);\n              return eventsQueried;\n            })\n            .then(results => {\n              this.setState({\n                events: results,\n                done: true\n              })\n            })\n          })\n      })\n      .catch(error => {\n        console.log(error)\n        this.setState({\n          error: true,\n          errorMsg: error \n        })\n      })\n\n       \n  }\n\n\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      done: undefined,\n      error: false,\n      errorMsg: undefined\n   }\n  }\n\n  handleChange(e) {\n    this.props.onZipChange(e.target.value);\n  }\n\n  \n  // below I added a link back to the landing page, just to make our lives easier while testing\n  // we'll remove it when we actually build the events page, since users won't need to go back to\n  // the landing page\n  render() {\n    const thisZip = this.props.zip;\n    const { events } = this.state;\n    //TODO: This section is not working. It just creates an empty page. I don't know why\n    if(thisZip == ''){\n      alert(\"No Zip is inputted - redirecting to main page\");\n      return <Redirect to=\"/\" />;\n    }\n    //<EventCard eventsData={events} />\n    //<div className=\"eventsPage\">Zip entered was: {thisZip}</div>\n    return (\n      <div>\n        \n        {!this.state.error ? (\n          !this.state.done ? (\n            <div className=\"container\">\n              <ReactLoading type={\"bars\"} color={\"white\"} />\n            </div>\n           ) : (\n            <EventCard eventsData={events} />\n           )\n        ) :(\n          <div className=\"error-msg\">\n              {this.state.errorMsg}\n          </div>\n        )}\n        \n        <div>\n          <ul>\n            <li>\n              <NavLink to=\"/\">Home</NavLink>\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Events;\n"]},"metadata":{},"sourceType":"module"}