{"ast":null,"code":"var _jsxFileName = \"/home/alicja/Documents/FrontEndProject/gigue/Gigue/src/routes/Events.js\";\n\n/* page for loading events on bootstrap cards */\nimport React from \"react\";\nimport \"../styles/App.css\";\nimport { NavLink } from \"react-router-dom\";\n\nclass Events extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      events: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.props.onZipChange(e.target.value);\n  } // below I added a link back to the landing page, just to make our lives easier while testing\n  // we'll remove it when we actually build the events page, since users won't need to go back to\n  // the landing page\n\n\n  render() {\n    const thisZip = this.props.zip;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"eventsPage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Zip entered was: \", thisZip), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Home\")))));\n  }\n\n}\n\nexport default Events;","map":{"version":3,"sources":["/home/alicja/Documents/FrontEndProject/gigue/Gigue/src/routes/Events.js"],"names":["React","NavLink","Events","Component","constructor","props","state","events","handleChange","bind","e","onZipChange","target","value","render","thisZip","zip"],"mappings":";;AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AACA,SAASC,OAAT,QAAwB,kBAAxB;;AAEA,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAqC;AAKnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAJnBC,KAImB,GAJX;AACNC,MAAAA,MAAM,EAAE;AADF,KAIW;AAEjB,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,CAACE,CAAD,EAAI;AACd,SAAKL,KAAL,CAAWM,WAAX,CAAuBD,CAAC,CAACE,MAAF,CAASC,KAAhC;AACD,GAZkC,CAanC;AACA;AACA;;;AACAC,EAAAA,MAAM,GAAG;AACP,UAAMC,OAAO,GAAG,KAAKV,KAAL,CAAWW,GAA3B;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAA8CD,OAA9C,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,EAAE,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF,CADF,CAFF,CADF;AAYD;;AA9BkC;;AAiCrC,eAAeb,MAAf","sourcesContent":["/* page for loading events on bootstrap cards */\n\nimport React from \"react\";\nimport \"../styles/App.css\";\nimport { NavLink } from \"react-router-dom\";\n\nclass Events extends React.Component {\n  state = {\n    events :[]\n  };\n\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.props.onZipChange(e.target.value);\n  }\n  // below I added a link back to the landing page, just to make our lives easier while testing\n  // we'll remove it when we actually build the events page, since users won't need to go back to\n  // the landing page\n  render() {\n    const thisZip = this.props.zip;\n    return (\n      <div>\n        <div className=\"eventsPage\">Zip entered was: {thisZip}</div>\n        <div>\n          <ul>\n            <li>\n              <NavLink to=\"/\">Home</NavLink>\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Events;\n"]},"metadata":{},"sourceType":"module"}