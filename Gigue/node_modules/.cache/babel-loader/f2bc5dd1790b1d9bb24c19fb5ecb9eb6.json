{"ast":null,"code":"var _jsxFileName = \"/home/alicja/Documents/FrontEndProject/gigue/Gigue/src/routes/EventCard.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"../styles/searchpage.css\";\nimport ReactLoading from \"react-loading\";\nimport React from 'react';\n\nconst EventInfo = props => {\n  const rows = props.eventsData.map((row, index) => {\n    console.log(row.eventName);\n    return React.createElement(\"div\", {\n      className: \"card-containers\",\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card card-flip border-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"front\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, row.EventName), React.createElement(\"p\", {\n      className: \"card-text\",\n      id: \"performance-dates\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Date: \", row.StartDate), React.createElement(\"button\", {\n      href: \"#\",\n      className: \"btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Flip for More Info!\"))), React.createElement(\"div\", {\n      className: \"back\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, row.EventName), React.createElement(\"h6\", {\n      className: \"card-subtitle mb-2 text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, row.StartDate), React.createElement(\"p\", {\n      className: \"card-text\",\n      id: \"performance-dates\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, row.Venue), React.createElement(\"a\", {\n      href: row.Uri,\n      className: \"card-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Click to Buy Tickets\")))));\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, rows);\n};\n\nclass EventCard extends React.Component {\n  render() {\n    const {\n      eventsData\n    } = this.props; //return <EventInfo eventsData={eventsData} />;\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, !this.state.done ? React.createElement(ReactLoading, {\n      type: \"bars\",\n      color: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }) : React.createElement(EventInfo, {\n      eventsData: eventsData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default EventCard;","map":{"version":3,"sources":["/home/alicja/Documents/FrontEndProject/gigue/Gigue/src/routes/EventCard.js"],"names":["ReactLoading","React","EventInfo","props","rows","eventsData","map","row","index","console","log","eventName","EventName","StartDate","Venue","Uri","EventCard","Component","render","state","done"],"mappings":";AAAA,OAAO,sCAAP;AACA,OAAO,0BAAP;AACA,OAAOA,YAAP,MAAyB,eAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAEzB,QAAMC,IAAI,GAAGD,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqB,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAChDC,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,SAAhB;AACA,WACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAiC,MAAA,GAAG,EAAEH,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BD,GAAG,CAACK,SAAhC,CADF,EAEE;AAAG,MAAA,SAAS,EAAC,WAAb;AAAyB,MAAA,EAAE,EAAC,mBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAuDL,GAAG,CAACM,SAA3D,CAFF,EAGE;AAAQ,MAAA,IAAI,EAAC,GAAb;AAAiB,MAAA,SAAS,EAAC,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAHF,CADF,CADF,EASE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BN,GAAG,CAACK,SAAhC,CADF,EAEE;AAAI,MAAA,SAAS,EAAC,+BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+CL,GAAG,CAACM,SAAnD,CAFF,EAGE;AAAG,MAAA,SAAS,EAAC,WAAb;AAAyB,MAAA,EAAE,EAAC,mBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiDN,GAAG,CAACO,KAArD,CAHF,EAIE;AAAG,MAAA,IAAI,EAAEP,GAAG,CAACQ,GAAb;AAAkB,MAAA,SAAS,EAAC,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAJF,CADF,CATF,CADF,CADF;AAsBD,GAxBY,CAAb;AAyBA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMX,IAAN,CAAP;AAED,CA7BD;;AAgCA,MAAMY,SAAN,SAAwBf,KAAK,CAACgB,SAA9B,CAAwC;AACtCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEb,MAAAA;AAAF,QAAiB,KAAKF,KAA5B,CADO,CAEP;;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,CAAC,KAAKgB,KAAL,CAAWC,IAAZ,GACE,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAE,MAApB;AAA4B,MAAA,KAAK,EAAE,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,GAGA,oBAAC,SAAD;AAAW,MAAA,UAAU,EAAEf,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADF;AASD;;AAbqC;;AAgBxC,eAAeW,SAAf","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\nimport \"../styles/searchpage.css\";\nimport ReactLoading from \"react-loading\";\nimport React from 'react';\n\n\nconst EventInfo = props => {\n\n  const rows = props.eventsData.map((row, index) => {\n    console.log(row.eventName);\n    return (\n      <div className=\"card-containers\" key={index}>\n        <div className=\"card card-flip border-primary\">\n          <div className=\"front\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{row.EventName}</h5>\n              <p className=\"card-text\" id=\"performance-dates\">Date: {row.StartDate}</p>\n              <button href=\"#\" className=\"btn-primary\">Flip for More Info!</button>\n            </div>\n          </div>\n\n          <div className=\"back\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{row.EventName}</h5>\n              <h6 className=\"card-subtitle mb-2 text-muted\">{row.StartDate}</h6>\n              <p className=\"card-text\" id=\"performance-dates\">{row.Venue}</p>\n              <a href={row.Uri} className=\"card-link\">Click to Buy Tickets</a>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  });\n  return <div>{rows}</div>;\n\n};\n\n\nclass EventCard extends React.Component {\n  render() {\n    const { eventsData } = this.props;\n    //return <EventInfo eventsData={eventsData} />;\n    return (\n      <div>\n         {!this.state.done ? (\n            <ReactLoading type={\"bars\"} color={\"white\"} />\n         ) : (\n          <EventInfo eventsData={eventsData} />\n         )}\n      </div>\n   )\n  }\n}\n\nexport default EventCard;"]},"metadata":{},"sourceType":"module"}